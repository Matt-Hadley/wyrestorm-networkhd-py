# PR Validation - Tests, Quality Checks, and Pre-release Build
name: PR Validation

on:
    pull_request:
        branches: [main]
        types: [opened, synchronize, reopened, ready_for_review]

permissions:
    contents: read
    pull-requests: write
    id-token: write # For artifact attestations

concurrency:
    group: pr-validation-${{ github.event.pull_request.number }}
    cancel-in-progress: true

jobs:
    validate:
        name: Quality Checks & Tests
        if: github.event.pull_request.draft == false
        runs-on: ubuntu-latest
        timeout-minutes: 30
        outputs:
            coverage: ${{ steps.coverage.outputs.coverage }}
            coverage-color: ${{ steps.coverage.outputs.color }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v5
              with:
                  fetch-depth: 0

            - name: Setup environment
              id: setup
              uses: ./.github/actions/setup-environment

            - name: Validate configuration
              run: make validate-config

            - name: Check versions
              run: make check-versions

            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cache/pip
                      .venv
                  key: ${{ runner.os }}-python-${{ hashFiles('pyproject.toml') }}
                  restore-keys: |
                      ${{ runner.os }}-python-

            - name: Check project structure
              run: make check-project-structure

            - name: Check code formatting
              run: make format-check

            - name: Run quality checks
              run: make check

            - name: Security audit
              run: make security-audit

            - name: Run tests with coverage
              run: make test-cov

            - name: Extract coverage percentage
              id: coverage
              continue-on-error: true
              uses: 5monkeys/cobertura-action@master
              with:
                  path: coverage.xml
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  minimum_coverage: 0
                  fail_below_threshold: false
                  show_missing: false
                  show_branch: false
                  only_changed_files: false

            - name: Generate coverage badge
              continue-on-error: true
              uses: schneegans/dynamic-badges-action@v1.7.0
              with:
                  auth: ${{ secrets.GIST_SECRET }}
                  gistID: ${{ secrets.GIST_ID }}
                  filename: coverage.json
                  label: coverage
                  message: ${{ steps.coverage.outputs.coverage-percentage || 'N/A' }}%
                  valColorRange: ${{ steps.coverage.outputs.coverage-percentage || '0' }}
                  maxColorRange: 100
                  minColorRange: 0
                  namedLogo: pytest

            - name: Build pre-release package
              run: make build

            - name: Upload PR artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: pr-artifacts-${{ github.event.number }}
                  path: |
                      security-report.json
                      htmlcov/
                      dist/
                  retention-days: 30

            - name: Attest build artifacts
              continue-on-error: true
              uses: actions/attest-build-provenance@v2
              with:
                  subject-path: "dist/*.whl"
