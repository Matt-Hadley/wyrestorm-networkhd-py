# Release Management - Automated Releases with Release Please
name: Release

on:
    push:
        branches: [main]

permissions:
    contents: write
    pull-requests: write
    issues: write
    id-token: write # For attestations

concurrency:
    group: release-${{ github.ref }}
    cancel-in-progress: false # Don't cancel releases

jobs:
    release-please:
        name: Release Please
        runs-on: ubuntu-latest
        timeout-minutes: 10
        outputs:
            releases_created: ${{ steps.release.outputs.releases_created }}
            tag_name: ${{ steps.release.outputs.tag_name }}
        steps:
            - uses: googleapis/release-please-action@v4
              id: release
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  release-type: python

            - name: Debug Release Please outputs
              run: |
                  echo "Releases created: '${{ steps.release.outputs.releases_created }}'"
                  echo "Tag name: '${{ steps.release.outputs.tag_name }}'"

    publish:
        name: Publish to PyPI
        needs: release-please
        if: ${{ needs.release-please.outputs.releases_created == 'true' }}
        runs-on: ubuntu-latest
        timeout-minutes: 10
        environment: pypi
        steps:
            - name: Checkout code
              uses: actions/checkout@v5
              with:
                  fetch-depth: 0

            - name: Setup environment
              uses: ./.github/actions/setup-environment

            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cache/pip
                      .venv
                  key: ${{ runner.os }}-python-${{ hashFiles('pyproject.toml') }}
                  restore-keys: |
                      ${{ runner.os }}-python-

            - name: Run health check
              run: make health-check

            - name: Extract coverage percentage
              id: coverage
              continue-on-error: true
              uses: 5monkeys/cobertura-action@master
              with:
                  path: coverage.xml
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  minimum_coverage: 0
                  fail_below_threshold: false
                  show_missing: false
                  show_branch: false
                  only_changed_files: false

            - name: Update coverage badge
              continue-on-error: true
              uses: schneegans/dynamic-badges-action@v1.7.0
              with:
                  auth: ${{ secrets.GIST_SECRET }}
                  gistID: ${{ secrets.GIST_ID }}
                  filename: coverage.json
                  label: coverage
                  message: ${{ steps.coverage.outputs.coverage-percentage || 'N/A' }}%
                  valColorRange: ${{ steps.coverage.outputs.coverage-percentage || '0' }}
                  maxColorRange: 100
                  minColorRange: 0
                  namedLogo: pytest

            - name: Upload release assets
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ needs.release-please.outputs.tag_name }}
                  files: |
                      dist/*.whl
                  fail_on_unmatched_files: true

            - name: Attest build artifacts
              continue-on-error: true
              uses: actions/attest-build-provenance@v2
              with:
                  subject-path: "dist/*.whl"

            - name: Publish to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  packages-dir: dist/
                  attestations: true
